
while the user remains in the shell:

	commandList = read input from stdin;

	while (command in commandList != NULL)
	{
		if (checkCommand(exit,status,cd) == command)
		{
			exit:	
				kill all processes, then exit the shell.
				no return status needed.
				no background operation (no processing of &)

			status:
				get the status

			cd:
				takes at most one argument, which is the path
				of a dir to change to. 
				
				if the directory does not exist, print an err
				msg for the user.

				if no args are given, change to the directory
				specified in the HOME environmental variable
		}
		else 
		{
			if (last char in the command is == '&')
			{
				run the process in the background
				execvp the command entered
			}
			else
			{
				run the process in the foreground 
			}

			print the exit status when each process
			is completed.	
		}
	}
	
	
		
		
